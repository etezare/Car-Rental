{\rtf1\ansi\ansicpg1252\cocoartf2576
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fmodern\fcharset0 Courier-Oblique;}
{\colortbl;\red255\green255\blue255;\red9\green9\blue9;\red0\green29\blue164;\red103\green104\blue52;
\red32\green126\blue124;\red114\green0\blue130;\red17\green109\blue18;\red110\green0\blue126;\red18\green51\blue230;
\red18\green48\blue202;\red140\green119\blue13;\red121\green121\blue121;\red10\green79\blue103;}
{\*\expandedcolortbl;;\csgenericrgb\c3529\c3529\c3529;\csgenericrgb\c0\c11373\c64314;\csgenericrgb\c40392\c40784\c20392;
\csgenericrgb\c12549\c49412\c48627;\csgenericrgb\c44706\c0\c50980;\csgenericrgb\c6667\c42745\c7059;\csgenericrgb\c43137\c0\c49412;\csgenericrgb\c7059\c20000\c90196;
\csgenericrgb\c7059\c18824\c79216;\csgenericrgb\c54902\c46667\c5098;\csgenericrgb\c47451\c47451\c47451;\csgenericrgb\c3922\c30980\c40392;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs28 \cf2 (\cf3 function \cf2 ($) \{\
    $.fn.\cf4 serializeFormJSON \cf2 = \cf3 function \cf2 () \{\
\
        \cf3 var \cf5 o \cf2 = \{\};\
        \cf3 var \cf5 a \cf2 = \cf3 this\cf2 .serializeArray();\
        $.each(\cf5 a\cf2 , \cf3 function \cf2 () \{\
            \cf3 if \cf2 (\cf5 o\cf2 [\cf3 this\cf2 .\cf6 name\cf2 ]) \{\
                \cf3 if \cf2 (!\cf5 o\cf2 [\cf3 this\cf2 .\cf6 name\cf2 ].\cf6 push\cf2 ) \{\
                    \cf5 o\cf2 [\cf3 this\cf2 .\cf6 name\cf2 ] = [\cf5 o\cf2 [\cf3 this\cf2 .\cf6 name\cf2 ]];\
                \}\
                \cf5 o\cf2 [\cf3 this\cf2 .\cf6 name\cf2 ].\cf6 push\cf2 (\cf3 this\cf2 .\cf6 value \cf2 || \cf7 ''\cf2 );\
            \} \cf3 else \cf2 \{\
                \cf5 o\cf2 [\cf3 this\cf2 .\cf6 name\cf2 ] = \cf3 this\cf2 .\cf6 value \cf2 || \cf7 ''\cf2 ;\
            \}\
        \});\
        \cf3 return \cf5 o\cf2 ;\
    \};\
\})(jQuery)\
\
$(\cf8 document\cf2 ).\cf6 ready\cf2 (\cf3 function \cf2 ()\{\
    $(\cf7 "#sub"\cf2 ).\cf4 click\cf2 (\cf3 function \cf2 ()\{\
        \cf3 let \cf5 data\cf2 =\cf8 JSON\cf2 .\cf4 stringify\cf2 ($(\cf7 "#courseForm"\cf2 ).\cf4 serializeFormJSON\cf2 ());\
        $.ajax(\{\
            \cf6 type\cf2 :\cf7 "POST"\cf2 ,\
            \cf6 url\cf2 :\cf7 "http://localhost:8080/addCourse"\cf2 ,\
            \cf6 data\cf2 :\cf5 data\cf2 ,\
            \cf6 dataType\cf2 :\cf7 "json"\cf2 ,\
            \cf6 contentType\cf2 :\cf7 "json/application"\cf2 ,\
            \cf4 success\cf2 :\cf3 function \cf2 (data)\{\
                $(\cf7 "#courseForm"\cf2 )[\cf9 0\cf2 ].\cf4 reset\cf2 ();\
                $(\cf7 "#result"\cf2 ).\cf4 empty\cf2 ();\
                $(\cf7 "#result"\cf2 ).\cf4 append\cf2 (\cf7 '<H3 align="center">okkkkkk</H3><p></p>'\cf2 ).\cf4 show\cf2 ()\
            \},\
            \cf4 error\cf2 :\cf3 function \cf2 (XMLHttpRequest)\{\
                $(\cf7 "#result"\cf2 ).\cf4 empty\cf2 ();\
                \cf3 if\cf2 (XMLHttpRequest.responseJSON.errorType==\cf7 "ValidationError"\cf2 )\{\
                    \cf3 let \cf5 errorList\cf2 =XMLHttpRequest.responseJSON.fieldErrors;\
                    \cf3 let \cf5 msg\cf2 =\cf7 '<H3 align="center">Error!!</H3>'\
                        \cf5 msg\cf2 +=\cf7 '<p>'\
                    \cf2 $.each(\cf5 errorList\cf2 ,\cf3 function \cf2 (i,error)\{\
                        \cf5 msg\cf2 +=error.\cf6 message\cf2 +\cf7 '<br>'\cf2 ;\
                    \})\
                    \cf5 msg\cf2 +=\cf7 '</p>'\cf2 ;\
                    $(\cf7 "#result"\cf2 ).\cf4 append\cf2 (\cf5 msg\cf2 ).\cf4 show\cf2 ()\
                \}\
            \}\
        \})\
    \})\
\})\
\
\
\
\
\
\
\
\
\
\
<!DOCTYPE \cf10 html\cf2 >\
<\cf3 html \cf10 xmlns:\cf6 th\cf7 ="http://www.thymeleaf.org"\cf2 >\
<\cf3 head\cf2 >\
    <\cf3 meta \cf10 charset\cf7 ="UTF-8"\cf2 >\
    <\cf3 title\cf2 >Title</\cf3 title\cf2 >\
</\cf3 head\cf2 >\
<\cf3 body\cf2 >\
<\cf3 form \cf10 id\cf7 ="inputform" \cf6 th\cf10 :method\cf7 ="post" \cf10 action\cf7 ="/save" \cf6 th\cf10 :object\cf7 ="$\{student\}"\cf2 >\
    <\cf3 fieldset\cf2 >\
        <\cf3 input \cf6 th\cf10 :value\cf7 ="$\{student.id\}" \cf6 th\cf10 :for\cf7 ="id" \cf6 th\cf10 :id\cf7 ="id" \cf10 hidden\cf2 >\
        <\cf3 p\cf2 >\
            <\cf3 label \cf6 th\cf10 :for\cf7 ="firstName"\cf2 >FirstName</\cf3 label\cf2 >\
            <\cf3 input \cf6 th\cf10 :id\cf7 ="firstName" \cf6 th\cf10 :name\cf7 ="firstName" \cf6 th\cf10 :value\cf7 ="$\{student.firstName\}" \cf6 th\cf10 :type\cf7 ="text"\cf2 >\
            <\cf3 span \cf6 th\cf10 :if\cf7 ="$\{#fields.hasErrors('firstName')\}" \cf6 th\cf10 :errors\cf7 ="$\{student.firstName\}" \cf10 style\cf7 ="\cf10 color\cf2 : \cf7 red"\cf2 ></\cf3 span\cf2 >\
        </\cf3 p\cf2 >\
        <\cf3 p\cf2 >\
            <\cf3 label \cf6 th\cf10 :for\cf7 ="studentNumber"\cf2 >studentNumber:</\cf3 label\cf2 >\
            <\cf3 input \cf6 th\cf10 :id\cf7 ="studentNumber" \cf6 th\cf10 :type\cf7 ="text" \cf6 th\cf10 :value\cf7 ="$\{student.studentNumber\}" \cf10 id\cf7 ="studentNumber" \cf6 th\cf10 :name\cf7 ="studentNumber"\cf2 >\
            <\cf3 span \cf6 th\cf10 :if\cf7 ="$\{#fields.hasErrors('studentNumber')\}" \cf6 th\cf10 :errors\cf7 ="$\{student.studentNumber\}" \cf10 style\cf7 ="\cf10 color\cf2 :\cf7 red\cf2 ;\cf7 "\cf2 ></\cf3 span\cf2 >\
        </\cf3 p\cf2 >\
        <\cf3 p\cf2 >\
            <\cf3 label \cf6 th\cf10 :for\cf7 ="lastName"\cf2 >lastName:</\cf3 label\cf2 >\
            <\cf3 input \cf6 th\cf10 :id\cf7 ="lastName" \cf6 th\cf10 :type\cf7 ="text" \cf6 th\cf10 :value\cf7 ="$\{student.lastName\}" \cf10 id\cf7 ="lastName" \cf6 th\cf10 :name\cf7 ="lastName"\cf2 >\
            <\cf3 span \cf6 th\cf10 :if\cf7 ="$\{#fields.hasErrors('lastName')\}" \cf6 th\cf10 :errors\cf7 ="$\{student.lastName\}" \cf10 style\cf7 ="\cf10 color\cf2 :\cf7 red\cf2 ;\cf7 "\cf2 ></\cf3 span\cf2 >\
        </\cf3 p\cf2 >\
        <\cf3 p\cf2 >\
            <\cf3 label \cf6 th\cf10 :for\cf7 ="street"\cf2 >street:</\cf3 label\cf2 >\
            <\cf3 input \cf6 th\cf10 :type\cf7 ="text"  \cf6 th\cf10 :field\cf7 ="$\{student.address.street\}" \cf10 id\cf7 ="street" \cf6 th\cf10 :name\cf7 ="street"\cf2 >\
            <\cf3 span \cf6 th\cf10 :if\cf7 ="$\{#fields.hasErrors('address.street')\}" \cf6 th\cf10 :errors\cf7 ="$\{student.address.street\}" \cf10 style\cf7 ="\cf10 color\cf2 :\cf7 red\cf2 ;\cf7 "\cf2 ></\cf3 span\cf2 >\
        </\cf3 p\cf2 >\
        <\cf3 select \cf6 th\cf10 :field\cf7 ="$\{student.courseList\}" \cf10 multiple\cf7 ="multiple" \cf10 size\cf7 ="3"\cf2 >\
            <\cf3 option \cf6 th\cf10 :each\cf7 ="course:$\{courses\}"\
            \cf6 th\cf10 :value\cf7 ="$\{\{course\}\}"\
            \cf6 th\cf10 :text\cf7 ="$\{course.name\}"\cf2 >\
            </\cf3 option\cf2 >\
        </\cf3 select\cf2 >\
    </\cf3 fieldset\cf2 >\
    <\cf3 button \cf10 type\cf7 ="submit"\cf2 >save</\cf3 button\cf2 >\
</\cf3 form\cf2 >\
\
</\cf3 body\cf2 >\
</\cf3 html\cf2 >\
\
\
\
\
\cf3 package \cf0 com.example.demo.exception\cf2 ;\
\
\cf3 import \cf0 org.springframework.http.HttpStatus\cf2 ;\
\cf3 import \cf0 org.springframework.validation.BindingResult\cf2 ;\
\cf3 import \cf0 org.springframework.validation.FieldError\cf2 ;\
\cf3 import \cf0 org.springframework.web.bind.MethodArgumentNotValidException\cf2 ;\
\cf3 import \cf0 org.springframework.web.bind.annotation.\cf11 ControllerAdvice\cf2 ;\
\cf3 import \cf0 org.springframework.web.bind.annotation.\cf11 ExceptionHandler\cf2 ;\
\cf3 import \cf0 org.springframework.web.bind.annotation.\cf11 ResponseBody\cf2 ;\
\cf3 import \cf0 org.springframework.web.bind.annotation.\cf11 ResponseStatus\cf2 ;\
\
\cf3 import \cf0 java.util.List\cf2 ;\
\
\cf11 @ControllerAdvice\
\cf3 public class \cf0 RestErrorHandler \cf2 \{\

\f1\i \cf12 //\
//	@Autowired\
//	private MessageSource messageSource;\
\
\
\
	
\f0\i0 \cf11 @ExceptionHandler\cf2 (\cf0 MethodArgumentNotValidException\cf2 .\cf3 class\cf2 )\
	\cf11 @ResponseStatus\cf2 (\cf0 HttpStatus\cf2 .
\f1\i \cf6 BAD_REQUEST
\f0\i0 \cf2 )\
	\cf11 @ResponseBody\
	\cf3 public \cf0 ValidationErrorDTO \cf13 processValidationError\cf2 (\cf0 MethodArgumentNotValidException \cf2 ex) \{\
		\cf0 BindingResult result \cf2 = ex.getBindingResult();\
		\cf0 List\cf2 <\cf0 FieldError\cf2 > \cf0 fieldErrors \cf2 = \cf0 result\cf2 .getFieldErrors();\
		\cf3 return \cf2 processFieldErrors(\cf0 fieldErrors\cf2 );\
	\}\
\
	\cf3 private \cf0 ValidationErrorDTO \cf13 processFieldErrors\cf2 (\cf0 List\cf2 <\cf0 FieldError\cf2 > fieldErrors) \{\
	\cf0 ValidationErrorDTO dto \cf2 = \cf3 new \cf2 ValidationErrorDTO(\cf7 "ValidationError"\cf2 );\
\
		\cf3 for \cf2 (\cf0 FieldError fieldError \cf2 : fieldErrors) \{\
			\cf0 dto\cf2 .addFieldError(\cf0 fieldError\cf2 .getField(), \cf0 fieldError\cf2 .getDefaultMessage());\
		\}\
		\cf3 return \cf0 dto\cf2 ;\
	\}\
\
\
\
\}\
\
}